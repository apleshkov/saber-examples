// Generated by Saber 0.2.1

// swiftlint:disable all

import Foundation
import Kitura

internal class RequestContainer: RequestContaining {

    internal unowned let appContainer: AppContainer

    internal unowned let routerRequest: RouterRequest

    private var cached_userProvider: UserProvider?

    internal init(appContainer: AppContainer, routerRequest: RouterRequest) {
        self.appContainer = appContainer
        self.routerRequest = routerRequest
    }

    internal var userProvider: UserProvider {
        if let cached = self.cached_userProvider { return cached }
        let userProvider = self.makeUserProvider()
        self.cached_userProvider = userProvider
        return userProvider
    }

    internal var usersAction: UsersAction {
        let usersAction = self.makeUsersAction()
        return usersAction
    }

    internal var user: User? {
        let user = self.makeUser()
        return user
    }

    private func makeUserProvider() -> UserProvider {
        return UserProvider(request: self.routerRequest, userStorage: self.appContainer.userStorage)
    }

    private func makeUsersAction() -> UsersAction {
        return UsersAction(user: self.user, userStorage: self.appContainer.userStorage)
    }

    private func makeUser() -> User? {
        let provider = self.userProvider
        return provider.provide()
    }

}