// Generated by Saber 0.2.0

// swiftlint:disable all

import Foundation

internal class RepoContainer: RepoContaining {

    internal unowned let appContainer: AppContainer

    private var cached_repoAPI: RepoAPI?

    internal init(appContainer: AppContainer) {
        self.appContainer = appContainer
    }

    internal var repoListVC: RepoListVC {
        let repoListVC = self.makeRepoListVC()
        self.injectTo(repoListVC: repoListVC)
        return repoListVC
    }

    internal var repoAPI: RepoAPI {
        if let cached = self.cached_repoAPI { return cached }
        let repoAPI = self.makeRepoAPI()
        self.cached_repoAPI = repoAPI
        return repoAPI
    }

    private func makeRepoListVC() -> RepoListVC {
        return RepoListVC()
    }

    private func makeRepoAPI() -> RepoAPI {
        return RepoAPI(sessionManager: self.appContainer.networkSessionManager)
    }

    private func injectTo(repoListVC: RepoListVC) {
        repoListVC.repoAPI = self.repoAPI
        repoListVC.logger = self.appContainer.logging
    }

    internal func injectTo(branchListVC: BranchListVC) {
        branchListVC.repoAPI = self.repoAPI
        branchListVC.logger = self.appContainer.logging
    }

}