// Generated by Saber 0.2.0

// swiftlint:disable all

import Foundation

internal class AppContainer: AppContaining {

    private var cached_loggerProvider: LoggerProvider?

    internal init() {
    }

    internal var viewController: ViewController {
        let viewController = self.makeViewController()
        return viewController
    }

    internal var loggerProvider: LoggerProvider {
        if let cached = self.cached_loggerProvider { return cached }
        let loggerProvider = self.makeLoggerProvider()
        self.cached_loggerProvider = loggerProvider
        return loggerProvider
    }

    internal var logger: Logger? {
        let logger = self.makeLogger()
        return logger
    }

    private func makeViewController() -> ViewController {
        return ViewController(logger: self.logger)
    }

    private func makeLoggerProvider() -> LoggerProvider {
        return LoggerProvider()
    }

    private func makeLogger() -> Logger? {
        let provider = self.loggerProvider
        return provider.provide()
    }

}